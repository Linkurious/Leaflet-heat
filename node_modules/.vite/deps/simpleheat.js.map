{
  "version": 3,
  "sources": ["../../simpleheat/simpleheat.js"],
  "sourcesContent": ["'use strict';\n\nif (typeof module !== 'undefined') module.exports = simpleheat;\n\nfunction simpleheat(canvas) {\n    if (!(this instanceof simpleheat)) return new simpleheat(canvas);\n\n    this._canvas = canvas = typeof canvas === 'string' ? document.getElementById(canvas) : canvas;\n\n    this._ctx = canvas.getContext('2d');\n    this._width = canvas.width;\n    this._height = canvas.height;\n\n    this._max = 1;\n    this._data = [];\n}\n\nsimpleheat.prototype = {\n\n    defaultRadius: 25,\n\n    defaultGradient: {\n        0.4: 'blue',\n        0.6: 'cyan',\n        0.7: 'lime',\n        0.8: 'yellow',\n        1.0: 'red'\n    },\n\n    data: function (data) {\n        this._data = data;\n        return this;\n    },\n\n    max: function (max) {\n        this._max = max;\n        return this;\n    },\n\n    add: function (point) {\n        this._data.push(point);\n        return this;\n    },\n\n    clear: function () {\n        this._data = [];\n        return this;\n    },\n\n    radius: function (r, blur) {\n        blur = blur === undefined ? 15 : blur;\n\n        // create a grayscale blurred circle image that we'll use for drawing points\n        var circle = this._circle = this._createCanvas(),\n            ctx = circle.getContext('2d'),\n            r2 = this._r = r + blur;\n\n        circle.width = circle.height = r2 * 2;\n\n        ctx.shadowOffsetX = ctx.shadowOffsetY = r2 * 2;\n        ctx.shadowBlur = blur;\n        ctx.shadowColor = 'black';\n\n        ctx.beginPath();\n        ctx.arc(-r2, -r2, r, 0, Math.PI * 2, true);\n        ctx.closePath();\n        ctx.fill();\n\n        return this;\n    },\n\n    resize: function () {\n        this._width = this._canvas.width;\n        this._height = this._canvas.height;\n    },\n\n    gradient: function (grad) {\n        // create a 256x1 gradient that we'll use to turn a grayscale heatmap into a colored one\n        var canvas = this._createCanvas(),\n            ctx = canvas.getContext('2d'),\n            gradient = ctx.createLinearGradient(0, 0, 0, 256);\n\n        canvas.width = 1;\n        canvas.height = 256;\n\n        for (var i in grad) {\n            gradient.addColorStop(+i, grad[i]);\n        }\n\n        ctx.fillStyle = gradient;\n        ctx.fillRect(0, 0, 1, 256);\n\n        this._grad = ctx.getImageData(0, 0, 1, 256).data;\n\n        return this;\n    },\n\n    draw: function (minOpacity) {\n        if (!this._circle) this.radius(this.defaultRadius);\n        if (!this._grad) this.gradient(this.defaultGradient);\n\n        var ctx = this._ctx;\n\n        ctx.clearRect(0, 0, this._width, this._height);\n\n        // draw a grayscale heatmap by putting a blurred circle at each data point\n        for (var i = 0, len = this._data.length, p; i < len; i++) {\n            p = this._data[i];\n            ctx.globalAlpha = Math.max(p[2] / this._max, minOpacity === undefined ? 0.05 : minOpacity);\n            ctx.drawImage(this._circle, p[0] - this._r, p[1] - this._r);\n        }\n\n        // colorize the heatmap, using opacity value of each pixel to get the right color from our gradient\n        var colored = ctx.getImageData(0, 0, this._width, this._height);\n        this._colorize(colored.data, this._grad);\n        ctx.putImageData(colored, 0, 0);\n\n        return this;\n    },\n\n    _colorize: function (pixels, gradient) {\n        for (var i = 0, len = pixels.length, j; i < len; i += 4) {\n            j = pixels[i + 3] * 4; // get gradient color from opacity value\n\n            if (j) {\n                pixels[i] = gradient[j];\n                pixels[i + 1] = gradient[j + 1];\n                pixels[i + 2] = gradient[j + 2];\n            }\n        }\n    },\n\n    _createCanvas: function () {\n        if (typeof document !== 'undefined') {\n            return document.createElement('canvas');\n        } else {\n            // create a new canvas instance in node.js\n            // the canvas class needs to have a default constructor without any parameter\n            return new this._canvas.constructor();\n        }\n    }\n};\n"],
  "mappings": "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",
  "names": []
}
